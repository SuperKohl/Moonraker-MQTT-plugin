    Printer Administration
//host information: GET /printer/info
#Emergency Stop: POST /printer/emergency_stop
#Restart the host: POST /printer/restart
#Restart the firmware: POST /printer/firmware_restart

    Printer Status
//List available printer objects: GET /printer/objects/list
Query printer object status: GET /printer/objects/query?gcode
#Subscribe to printer object status: POST /printer/objects/subscribe?connection_id=123456789& gcode=gcode_position,bus&extruder=target
//Query Endstops: GET /printer/query_endstops/status
//Query Server Info: GET /server/info
Get Server Configuration: GET /server/config
Fetch stored temperature data: GET /server/temperature_store
Fetch stored gcode info: GET /server/gcode_store
#Restart Server: POST /server/restart

   //Gcode Controls//
//#Run a gcode: POST /printer/gcode/script?script=<gc>
//Get GCode Help: GET /printer/gcode/help

    Print Management
#Print a file: POST /printer/print/start?filename=<file name>
#Pause a print: POST /printer/print/pause
#Resume a print: POST /printer/print/resume
#Cancel a print: POST /printer/print/cancel

    Machine Commands
#Shutdown the Operating System: POST /machine/shutdown
#Reboot the Operating System: POST /machine/reboot
#Restart a system service: POST /machine/services/restart?service=<service_name>
#Stop a system service: POST /machine/services/stop?service=<service_name>
#Start a system service: POST /machine/services/start?service=<service_name>
Get Process Info: GET /machine/proc_info

    File Operations
//List Available Files: GET /server/files/list?root=gcodes
Get GCode Metadata: GET /server/files/metadata?filename=<filename>
Get directory information: GET /server/files/directory?path=gcodes/my_subdir&extended=true
#Make new directory: POST /server/files/directory?path=gcodes/my_new_dir
#Delete directory: DELETE /server/files/directory?path=gcodes/my_subdir
#Move a file or directory: POST /server/files/move?source=gcodes/my_file.gcode &dest=gcodes/subdir/my_file.gcode
#Copy a file or directory: POST /server/files/copy?source=gcodes/my_file.gcode &dest=gcodes/subdir/my_file.gcode
Gcode File Download: GET /server/files/gcodes/<file_name>
#File Upload: POST /server/files/upload
#Gcode File Delete: DELETE /server/files/gcodes/<file_name>
Download included config file: GET /server/files/config/<file_name>
#Delete included config file: DELETE /server/files/config/<file_name>
Download a config example: GET /server/files/config_examples/<file_name>
Download Klipper documentation: GET /server/files/docs/<file_name>
Download klippy.log: GET /server/files/klippy.log
Download moonraker.log: GET /server/files/moonraker.log

    Authorization
Get the Current API Key: GET /access/api_key
#Generate a New API Key: POST /access/api_key
Generate a Oneshot Token: GET /access/oneshot_token

    Database APIs
List Namespaces: GET /server/database/list
Get Database Item: GET /server/database/item?namespace=my_namespace&key=item.location
#Add Database Item: POST /server/database/item?namespace=my_namespace&key=item.location&value:int=100
#Delete Database Item: DELETE /server/database/item?namespace=my_namespace&key=item.location

    Update Manager APIs
Get update status: GET /machine/update/status?refresh=false
#Update Moonraker: POST /machine/update/moonraker?include_deps=false
#Update Klipper: POST /machine/update/klipper?include_deps=false
#Update Client: POST /machine/update/client?name=client_name
#Update System Packages: POST /machine/update/system
Power APIs: GET /machine/device_power/devices
Get Device Status: GET /machine/device_power/status?dev_one&dev_two
#Power On Device(s): POST /machine/device_power/on?dev_one&dev_two
#Power Off Device(s): POST /machine/device_power/off?dev_one&dev_two

#    Octoprint API emulation
# Version information: GET /api/version
# Server status: GET /api/server
# Login verification & User information: GET /api/login
# Get settings: GET /api/server
# #File Upload: POST /api/files/local
# Get Job status: GET /api/job
# Get Printer status: GET /api/printer
# #Send GCode command: POST /api/printer/command
# List Printer profiles: GET /api/printerprofiles








